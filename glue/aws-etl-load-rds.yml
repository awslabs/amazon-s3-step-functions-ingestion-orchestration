---
AWSTemplateFormatVersion: 2010-09-09

Description: >
  A CloudFormation template that creates a Glue connection and crawlers and a Job,
  execute the crawler and the JOb using a lambda custom resource
Parameters:
  CFNJDBCString:
    Description: The JDBC URL string
    Type: String
    Default: "jdbc:postgresql://create-rds-databasecluster-10458bf7lghmb.cluster-cu74pzqocy8l.us-west-2.rds.amazonaws.com:5432/blog1"
  CFNJDBCUser:
    Description: The JDBC User name
    Type: String
    Default: "tayo"
  CFNJDBCPassword:
    Description: The JDBC password
    Type: String
    Default: "111111"
    NoEcho: 'true'
  SubnetId:
    Description: The subnet Id used in the Glue connection
    Type: String
    Default: "subnet-0aaf3050"
  AvailabilityZone:
    Description: The AZ where private subnet is
    Type: String
    Default: "us-west-2c"
  CFNDepositsCrawlerName:
    Description: The crawler for deposits
    Type: String
    Default: cfn-crawler-spark-dep
  CFNLoansCrawlerName:
    Description: The Loans crawler
    Type: String
    Default: cfn-crawler-spark-loa
  CFNInvestmentsCrawlerName:
    Description: The Investments crawler
    Type: String
    Default: cfn-crawler-spark-inv
  CFNShipmentsCrawlerName:
    Description: The shipments crawler
    Type: String
    Default: cfn-crawler-spark-shi
  CFNDatabaseName:
    Description: The glue database name
    Type: String
    Default: cfn-database-s3
  CFNTablePrefixName:
    Description: The glue database table prefix name
    Type: String
    Default: cfn_s3_sprk_1_
  CFNS3PATHLOAN:
    Description: Path to loans table gzipped files
    Type: String
    Default: "s3://dfw-meetup-sf/Loans"
  CFNS3PATHINV:
    Description: Path to investments table gzipped files
    Type: String
    Default: "s3://dfw-meetup-sf/Investments"
  CFNS3PATHSHIP:
    Description: Path to shipments table gzipped files
    Type: String
    Default: "s3://dfw-meetup-sf/Shipments"
  CFNS3PATHDEPOSIT:
    Description: Path to deposits table gzipped files
    Type: String
    Default: "s3://dfw-meetup-sf/Deposits"
  CFNJobName:
    Description: Name of the Glue Job to be created
    Type: String
    Default: cfn-glue-job-s3-to-JDBC
  CFNScriptLocation:
    Description: Path to the Glue Job script to be executed
    Type: String
    Default: s3://dfw-meetup-sf/aws-glue-etl-job.py
  CFNConnectionName:
    Description: Name of the Glue connection that will be created
    Type: String
    Default: cfn-connection-spark-1
  S3Bucket:
    Description: Bucket containing all the artifacts
    Type: String
    Default: dfw-meetup-sf
  GlueCrawlerCustomKey:
    Description: Glue crawler Custom Resource Lambda function key
    Type: String
    Default: glue/aws-etl-start-crawler-custom-resource.py.zip
  GlueCrawlerCustomModule:
    Description: Name of the Glue crawler custom resource module
    Type: String
    Default: aws-etl-start-crawler-custom-resource
  GlueJobCustomKey:
    Description: Glue crawler Custom Resource Lambda function key
    Type: String
    Default: glue/aws-etl-start-job-custom-resource.py.zip
  GlueJobCustomModule:
    Description: Name of the Glue crawler custom resource module
    Type: String
    Default: aws-etl-start-job-custom-resource
Resources:
  CFNConnectionMySQL:
    Type: AWS::Glue::Connection
    Properties:
      CatalogId: !Ref AWS::AccountId
      ConnectionInput:
        Description: "Connect to MySQL database."
        ConnectionType: "JDBC"
        #MatchCriteria: none
        PhysicalConnectionRequirements:
          AvailabilityZone: !Ref AvailabilityZone
          SecurityGroupIdList: !Split
            - ","
            - Fn::ImportValue:
                AuroraClusterSecurityGroup
          SubnetId: !Ref SubnetId
        ConnectionProperties: {
          JDBC_CONNECTION_URL: !Ref CFNJDBCString,
          USERNAME: !Ref CFNJDBCUser,
          PASSWORD: !Ref CFNJDBCPassword
        }
        Name: !Ref CFNConnectionName
  CFNGlueS3Spark:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"
  CFNDatabaseSpark:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref CFNDatabaseName
        Description: "AWS Glue container to hold metadata tables for the cfn-spark-s3 crawler"
  CFNCrawlerLoan:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref CFNLoansCrawlerName
      Role: !GetAtt CFNGlueS3Spark.Arn
      DatabaseName: !Ref CFNDatabaseName
      Targets:
        S3Targets:
          - Path: !Ref CFNS3PATHLOAN
      TablePrefix: !Ref CFNTablePrefixName
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"
      Configuration: "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}"
  CFNCrawlerDeposit:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref CFNDepositsCrawlerName
      Role: !GetAtt CFNGlueS3Spark.Arn
      DatabaseName: !Ref CFNDatabaseName
      Targets:
        S3Targets:
          - Path: !Ref CFNS3PATHDEPOSIT
      TablePrefix: !Ref CFNTablePrefixName
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"
      Configuration: "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}"
  CFNCrawlerShipment:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref CFNShipmentsCrawlerName
      Role: !GetAtt CFNGlueS3Spark.Arn
      DatabaseName: !Ref CFNDatabaseName
      Targets:
        S3Targets:
          - Path: !Ref CFNS3PATHSHIP
      TablePrefix: !Ref CFNTablePrefixName
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"
      Configuration: "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}"
  CFNCrawlerInvestment:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref CFNInvestmentsCrawlerName
      Role: !GetAtt CFNGlueS3Spark.Arn
      DatabaseName: !Ref CFNDatabaseName
      Targets:
        S3Targets:
          - Path: !Ref CFNS3PATHINV
      TablePrefix: !Ref CFNTablePrefixName
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"
      Configuration: "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}"
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole'
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - s3:*
            Resource: "*"
  CFNJobSpark:
    Type: AWS::Glue::Job
    Properties:
      Role: !Ref CFNGlueS3Spark
      #DefaultArguments: JSON object
      # For example, if required by script, set temporary directory as DefaultArguments={'--TempDir'; 's3://aws-glue-temporary-xyc/sal'}
      Connections:
        Connections:
        - !Ref CFNConnectionName
      #MaxRetries: Double
      Description: Job created with CloudFormation using existing script
      #LogUri: String
      Command:
        Name: glueetl
        ScriptLocation: !Ref CFNScriptLocation
             # for access to directories use proper IAM role with permission to buckets and folders that begin with "aws-glue-"
             # if required, script defines temp directory as argument TempDir and used in script like redshift_tmp_dir = args["TempDir"]
             # script defines target for output as s3://aws-glue-target/sal
      AllocatedCapacity: 5
      ExecutionProperty:
        MaxConcurrentRuns: 1
      Name: !Ref CFNJobName
  CFNStartGlueCrawler:
    Type: Custom::CFNStartGlueCrawler
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - CFNStartGlueCrawlerFunction
        - Arn
      Region:
        Ref: AWS::Region
    DependsOn:
      - CFNCrawlerLoan
      - CFNCrawlerDeposit
      - CFNCrawlerShipment
      - CFNCrawlerInvestment
  CFNStartGlueCrawlerFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: S3Bucket
        S3Key:
          Ref: GlueCrawlerCustomKey
      Handler:
        Fn::Join:
        - ''
        - - Ref: GlueCrawlerCustomModule
          - ".handler"
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Runtime: python2.7
      Timeout: '60'
      Environment:
        Variables:
          depcrawler: !Ref CFNDepositsCrawlerName
          invcrawler: !Ref CFNInvestmentsCrawlerName
          loancrawler: !Ref CFNLoansCrawlerName
          shipcrawler: !Ref CFNShipmentsCrawlerName

  CFNStartGlueJob:
    Type: Custom::CFNStartGlueJob
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - CFNStartGlueJobFunction
        - Arn
      Region:
        Ref: AWS::Region
    DependsOn:
      - CFNStartGlueCrawler
  CFNStartGlueJobFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: S3Bucket
        S3Key:
          Ref: GlueJobCustomKey
      Handler:
        Fn::Join:
        - ''
        - - Ref: GlueJobCustomModule
          - ".handler"
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Runtime: python2.7
      Timeout: '60'
      Environment:
        Variables:
          depcrawler: !Ref CFNDepositsCrawlerName
          invcrawler: !Ref CFNInvestmentsCrawlerName
          loancrawler: !Ref CFNLoansCrawlerName
          shipcrawler: !Ref CFNShipmentsCrawlerName
          jobname: !Ref CFNJobName
