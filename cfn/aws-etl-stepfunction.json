{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "A template that creates a State Machine that ochestrates an ETL process involving the running of spark jobs on emr",
    "Parameters": {
        "CreateEMRModuleName": {
            "Description": "The name of the Python file",
            "Type": "String",
            "Default": "aws_etl_emr_cluster_create"
        },
        "S3Bucket": {
            "Description": "The name of the bucket that contains your packaged source",
            "Type": "String",
            "Default": "temitayo-aws"
        },
        "CreateEMRS3Key": {
            "Description": "The name of the ZIP package",
            "Type": "String",
            "Default": "lambdas/aws_etl_emr_cluster_create.zip"
        },
        "emrname": {
            "Description": "The name of the emr",
            "Type": "String",
            "Default": "aws_EMR_ETL_INCREMENTAL_CLUSTER"
        },
        "releaselabel": {
            "Description": "The emr release label",
            "Type": "String",
            "Default": "emr-5.17.0"
        },
        "loguri": {
            "Description": "The name of the log uri location",
            "Type": "String",
            "Default": "s3n://aws-logs-111111111111-us-west-2/elasticmapreduce"
        },
        "ec2keyname": {
            "Description": "The name of the key pair",
            "Type": "String",
            "Default": "ty-private-emr-kp"
        },
        "ec2subnetid": {
            "Description": "The id of the subnet where the emr is deployed",
            "Type": "String",
            "Default": "subnet-0aaf3050"
        },
        "emrsteplocation": {
            "Description": "The location of the emr step  script",
            "Type": "String",
            "Default": "s3://temitayo-aws/ba/bootstrap-emr-step.sh"
        },
        "emrbalocation": {
            "Description": "The location of the bootstrap action script",
            "Type": "String",
            "Default": "s3://temitayo-aws/ba/bootstrap-emr.sh"
        },
        "ClusterStatusModuleName": {
            "Description": "The name of the Python file",
            "Type": "String",
            "Default": "aws_etl_emr_cluster_status"
        },
        "ClusterStatusS3Key": {
            "Description": "The name of the ZIP package",
            "Type": "String",
            "Default": "lambdas/aws_etl_emr_cluster_status.zip"
        },
        "regionname": {
            "Description": "region where function will be deployed",
            "Type": "String",
            "Default": "us-west-2"
        },
        "configtable": {
            "Description": "The DDB config table",
            "Type": "String",
            "Default": "aws-etl-conf"
        },
        "EMRStepSubmitModuleName": {
            "Description": "The name of the Python file",
            "Type": "String",
            "Default": "aws_etl_add_emr_step"
        },
        "EMRStepSubmitS3Key": {
            "Description": "The name of the ZIP package",
            "Type": "String",
            "Default": "lambdas/aws_etl_add_emr_step.zip"
        },
        "EMRStepStatusModuleName": {
            "Description": "The name of the Python file",
            "Type": "String",
            "Default": "aws_etl_emr_step_status"
        },
        "EMRStepStatusS3Key": {
            "Description": "The name of the ZIP package",
            "Type": "String",
            "Default": "lambdas/aws_etl_emr_step_status.zip"
        },
        "historytable": {
            "Description": "The DDB history table",
            "Type": "String",
            "Default": "aws-etl-history"
        },
        "GetNextEMRJobModule": {
            "Description": "The name of the Python file",
            "Type": "String",
            "Default": "aws_etl_iterator"
        },
        "GetNextEMRJobS3Key": {
            "Description": "The name of the ZIP package",
            "Type": "String",
            "Default": "lambdas/aws_etl_iterator.zip"
        },
        "AllJobsCompletedModule": {
            "Description": "The name of the Python file",
            "Type": "String",
            "Default": "aws_etl_all_steps_completed"
        },
        "AllJobsCompletedS3Key": {
            "Description": "The name of the ZIP package",
            "Type": "String",
            "Default": "lambdas/aws_etl_all_steps_completed.zip"
        },
        "DDBConfigModule": {
            "Description": "The name of the Python file",
            "Type": "String",
            "Default": "aws_etl_conf_jobs_custom_resource"
        },
        "DDBConfigS3Key": {
            "Description": "The name of the ZIP package",
            "Type": "String",
            "Default": "lambdas/aws_etl_conf_jobs_custom_resource.zip"
        },
        "CustomResourceS3Key": {
            "Description": "The name of the dynamodb config table columnn to be created",
            "Type": "String",
            "Default": "cfn/config.txt"
        },
        "emrcommandrunnerscript": {
            "Description": "The emr command runner regional script",
            "Type": "String",
            "Default": "s3://us-west-2.elasticmapreduce/libs/script-runner/script-runner.jar"
        },
        "ETLStateMachineDateRotationS3Key": {
            "Description": "The name of the ZIP package",
            "Type": "String",
            "Default": "lambdas/aws_etl_date_rotation.zip"
        },
        "ETLStateMachineDateRotationModuleName": {
            "Description": "The name of the Python file",
            "Type": "String",
            "Default": "aws_etl_date_rotation"
        },
        "Environment": {
            "Type": "String",
            "Description": "environment",
            "Default": "NonProd"
        },
        "SubEnvironment": {
            "Type": "String",
            "Description": "Name subenvironment",
            "Default": "dev"
        },
        "AccountName": {
            "Type": "String",
            "Description": "Name of the application",
            "Default": "aws-state-machine"
        }
    },
    "Resources": {
        "BlogEtlConfDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "job_name",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "job_name",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "5",
                    "WriteCapacityUnits": "5"
                },
                "TableName": {
                    "Ref": "configtable"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-configtable"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    },
                    {
                        "Key": "DynamoDBTableName",
                        "Value": {
                            "Ref": "configtable"
                        }
                    }
                ]
            }
        },
        "InsertDDBETLConfig": {
            "Type": "Custom::InsertDDBETLConfig",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "InsertDDBETLConfigFunction",
                        "Arn"
                    ]
                },
                "Region": {
                    "Ref": "AWS::Region"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-InsertDDBETLConfigCustomResource"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    }
                ]
            },
            "DependsOn": "BlogEtlConfDynamoDBTable"
        },
        "InsertDDBETLConfigFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3Bucket"
                    },
                    "S3Key": {
                        "Ref": "DDBConfigS3Key"
                    }
                },
                "Handler": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "DDBConfigModule"
                            },
                            ".handler"
                        ]
                    ]
                },
                "Role": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                "StepFunction-Lambda-Execution-Role"
                            ]
                        ]
                    }
                },
                "Runtime": "python3.7",
                "Timeout": "45",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-InsertDDBETLConfigLambdaFunction"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    }
                ],
                "Environment": {
                    "Variables": {
                        "region_name": {
                            "Ref": "regionname"
                        },
                        "s3_bucket": {
                            "Ref": "S3Bucket"
                        },
                        "s3_object_key": {
                            "Ref": "CustomResourceS3Key"
                        },
                        "table_name": {
                            "Ref": "configtable"
                        }
                    }
                }
            }
        },
        "BlogEtlHistoryDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "uuid",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "cluster_id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "uuid",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "5",
                    "WriteCapacityUnits": "5"
                },
                "TableName": {
                    "Ref": "historytable"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-historytable"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    },
                    {
                        "Key": "DynamoDBTableName",
                        "Value": {
                            "Ref": "historytable"
                        }
                    }
                ],
                "GlobalSecondaryIndexes": [
                    {
                        "IndexName": "cluster_id-index",
                        "KeySchema": [
                            {
                                "AttributeName": "cluster_id",
                                "KeyType": "HASH"
                            }
                        ],
                        "Projection": {
                            "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                            "ReadCapacityUnits": "5",
                            "WriteCapacityUnits": "5"
                        }
                    }
                ]
            }
        },
        "ETLStateMachineDateRotation": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3Bucket"
                    },
                    "S3Key": {
                        "Ref": "ETLStateMachineDateRotationS3Key"
                    }
                },
                "Handler": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "ETLStateMachineDateRotationModuleName"
                            },
                            ".lambda_handler"
                        ]
                    ]
                },
                "Role": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                "StepFunction-Lambda-Execution-Role"
                            ]
                        ]
                    }
                },
                "Runtime": "python3.7",
                "Timeout": "45",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-ETLStateMachineDateRotationModule"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    }
                ],
                "Environment": {
                    "Variables": {
                        "region": {
                            "Ref": "regionname"
                        },
                        "table_name": {
                            "Ref": "configtable"
                        },
                        "sns_topic": {
                            "Fn::ImportValue": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "aws-etl-sns-topic-name"
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "CreateBlogEMR": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3Bucket"
                    },
                    "S3Key": {
                        "Ref": "CreateEMRS3Key"
                    }
                },
                "Handler": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "CreateEMRModuleName"
                            },
                            ".lambda_handler"
                        ]
                    ]
                },
                "Role": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                "StepFunction-Lambda-Execution-Role"
                            ]
                        ]
                    }
                },
                "Runtime": "python3.7",
                "Timeout": "45",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-CreateEMRModule"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    }
                ],
                "Environment": {
                    "Variables": {
                        "emr_name": {
                            "Ref": "emrname"
                        },
                        "release_label": {
                            "Ref": "releaselabel"
                        },
                        "log_uri": {
                            "Ref": "loguri"
                        },
                        "ec2_keyname": {
                            "Ref": "ec2keyname"
                        },
                        "ec2_subnetid": {
                            "Ref": "ec2subnetid"
                        },
                        "master_sg": {
                            "Fn::ImportValue": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "AWS-ETL-ElasticMapReduceMasterPrivate-SG"
                                    ]
                                ]
                            }
                        },
                        "slave_sg": {
                            "Fn::ImportValue": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "AWS-ETL-ElasticMapReduceSlavePrivate-SG"
                                    ]
                                ]
                            }
                        },
                        "serviceaccess_sg": {
                            "Fn::ImportValue": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "AWS-ETL-ElasticMapReduceServiceAccess-SG"
                                    ]
                                ]
                            }
                        },
                        "emr_step_location": {
                            "Ref": "emrsteplocation"
                        },
                        "emr_ba_location": {
                            "Ref": "emrbalocation"
                        },
                        "job_flowrole": {
                            "Fn::ImportValue": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "AWS-ETL-EMRClusterinstanceProfile"
                                    ]
                                ]
                            }
                        },
                        "service_role": {
                            "Fn::ImportValue": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "AWS-ETL-EMR-ClusterServiceRole"
                                    ]
                                ]
                            }
                        },
                        "commandrunner_region": {
                            "Ref": "emrcommandrunnerscript"
                        }
                    }
                }
            }
        },
        "EMRClusterStatus": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3Bucket"
                    },
                    "S3Key": {
                        "Ref": "ClusterStatusS3Key"
                    }
                },
                "Handler": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "ClusterStatusModuleName"
                            },
                            ".lambda_handler"
                        ]
                    ]
                },
                "Role": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                "StepFunction-Lambda-Execution-Role"
                            ]
                        ]
                    }
                },
                "Runtime": "python3.7",
                "Timeout": "45",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-ClusterStatusModule"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    }
                ],
                "Environment": {
                    "Variables": {
                        "region": {
                            "Ref": "regionname"
                        },
                        "table_name": {
                            "Ref": "configtable"
                        },
                        "sns_topic": {
                            "Fn::ImportValue": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "aws-etl-sns-topic-name"
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "EMRAddEMRStep": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3Bucket"
                    },
                    "S3Key": {
                        "Ref": "EMRStepSubmitS3Key"
                    }
                },
                "Handler": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "EMRStepSubmitModuleName"
                            },
                            ".lambda_handler"
                        ]
                    ]
                },
                "Role": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                "StepFunction-Lambda-Execution-Role"
                            ]
                        ]
                    }
                },
                "Runtime": "python3.7",
                "Timeout": "45",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-EMRStepSubmitModule"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    }
                ],
                "Environment": {
                    "Variables": {
                        "region": {
                            "Ref": "regionname"
                        },
                        "table_name": {
                            "Ref": "configtable"
                        }
                    }
                }
            }
        },
        "EMRStepStatus": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3Bucket"
                    },
                    "S3Key": {
                        "Ref": "EMRStepStatusS3Key"
                    }
                },
                "Handler": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "EMRStepStatusModuleName"
                            },
                            ".lambda_handler"
                        ]
                    ]
                },
                "Role": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                "StepFunction-Lambda-Execution-Role"
                            ]
                        ]
                    }
                },
                "Runtime": "python3.7",
                "Timeout": "45",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-EMRStepStatusModule"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    }
                ],
                "Environment": {
                    "Variables": {
                        "region": {
                            "Ref": "regionname"
                        },
                        "history_table": {
                            "Ref": "historytable"
                        },
                        "config_table": {
                            "Ref": "configtable"
                        },
                        "sns_topic": {
                            "Fn::ImportValue": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "aws-etl-sns-topic-name"
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "GetNextEMRJob": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3Bucket"
                    },
                    "S3Key": {
                        "Ref": "GetNextEMRJobS3Key"
                    }
                },
                "Handler": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "GetNextEMRJobModule"
                            },
                            ".handler"
                        ]
                    ]
                },
                "Role": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                "StepFunction-Lambda-Execution-Role"
                            ]
                        ]
                    }
                },
                "Runtime": "nodejs8.10",
                "Timeout": "45",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-GetNextEMRJobModule"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    }
                ]
            }
        },
        "AllJobsCompleted": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3Bucket"
                    },
                    "S3Key": {
                        "Ref": "AllJobsCompletedS3Key"
                    }
                },
                "Handler": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AllJobsCompletedModule"
                            },
                            ".lambda_handler"
                        ]
                    ]
                },
                "Role": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                "StepFunction-Lambda-Execution-Role"
                            ]
                        ]
                    }
                },
                "Runtime": "python3.7",
                "Timeout": "45",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AccountName}-${Environment}-${SubEnvironment}-AllJobsCompletedModule"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": {
                            "Ref": "SubEnvironment"
                        }
                    }
                ],
                "Environment": {
                    "Variables": {
                        "region": {
                            "Ref": "regionname"
                        },
                        "table": {
                            "Ref": "historytable"
                        },
                        "sns_topic": {
                            "Fn::ImportValue": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "aws-etl-sns-topic-name"
                                    ]
                                ]
                            }
                        }
                    }
                }
            }
        },
        "ETLStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
                "DefinitionString": {
                    "Fn::Sub": [
                        "{\n  \"Comment\": \"A state machine that creates an EMR Cluster, checks its status, submits a step to the cluster, monitors the Step until it completes.\",\n  \"StartAt\": \"RotateDateWindow\",\n  \"States\": {\n    \"RotateDateWindow\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${etlstatemachinedaterotationlambdaArn}\",\n      \"ResultPath\": \"$.taskresult\",\n      \"Next\": \"IsDateRotationComplete\"\n      },\n    \"IsDateRotationComplete\":\n      {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n      {\n      \"Variable\": \"$.taskresult\",\n      \"StringEquals\": \"DUPLICATED RUN\",\n      \"Next\": \"ClusterFail\"\n      },\n      {\n      \"Variable\": \"$.taskresult\",\n      \"StringEquals\": \"FAIL\",\n      \"Next\": \"ClusterFail\"\n      },\n      {\n      \"Variable\": \"$.taskresult\",\n      \"StringEquals\": \"DONE\",\n      \"Next\": \"CreateEMRCluster\"\n    }\n    ],\n    \"Default\": \"CreateEMRCluster\"\n    },\n    \"CreateEMRCluster\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${createemrlambdaArn}\",\n      \"ResultPath\": \"$.cluster_id\",\n      \"Next\": \"WaitTimeCluster\"\n    },\n    \"WaitTimeCluster\": {\n      \"Type\": \"Wait\",\n      \"SecondsPath\": \"$.wait_time\",\n      \"Next\": \"GetClusterStatus\"\n    },\n    \"GetClusterStatus\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${getclusterstatuslambdaArn}\",\n      \"Next\": \"IsClusterStartupComplete?\",\n      \"InputPath\":\"$\",\n      \"ResultPath\": \"$.taskresult\"\n    },\n    \"IsClusterStartupComplete?\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n          \"Variable\": \"$.taskresult\",\n          \"StringEquals\": \"FAILED\",\n          \"Next\": \"ClusterFail\"\n        },\n        {\n          \"Variable\": \"$.taskresult\",\n          \"StringEquals\": \"OK\",\n          \"Next\": \"EMRStepSubmit\"\n        }\n      ],\n      \"Default\": \"WaitTimeCluster\"\n    },\n    \"ClusterFail\": {\n      \"Type\": \"Fail\",\n      \"Cause\": \"AWS Cluster Creation Status Failed\",\n      \"Error\": \"Create ElasticMapReduce Cluster FAILED\"\n    },\n    \"EMRStepSubmit\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${emrstepsubmmitlambdaArn}\",\n      \"InputPath\":\"$\",\n      \"ResultPath\": \"$.step_id\",\n     \"Next\": \"WaitTimeEmrStep\"\n    },\n    \"WaitTimeEmrStep\": {\n      \"Type\": \"Wait\",\n      \"SecondsPath\": \"$.step_wait_time\",\n      \"Next\": \"GetEMRStepStatus\"\n    },\n    \"GetEMRStepStatus\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${getemrstepstatuslambdaArn}\",\n      \"Next\": \"IsEMRStepComplete?\",\n      \"ResultPath\": \"$.taskresult\"\n    },\n    \"IsEMRStepComplete?\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n          \"Variable\": \"$.taskresult\",\n          \"StringEquals\": \"FAILED\",\n          \"Next\": \"EMRStepFailed\"\n        },\n        {\n          \"Variable\": \"$.taskresult\",\n          \"StringEquals\": \"OK\",\n          \"Next\": \"GetNextEMRStep\"\n        }\n      ],\n      \"Default\": \"WaitTimeEmrStep\"\n    },\n    \"EMRStepFailed\": {\n      \"Type\": \"Pass\",\n      \"ResultPath\": \"$.taskresults\",\n      \"Next\": \"GetNextEMRStep\"\n    },\n     \"GetNextEMRStep\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${getnextemrsteplambdaArn}\",\n       \"InputPath\":\"$\",\n       \"ResultPath\": \"$.iterator\",\n      \"Next\": \"IsNextJobAvailable?\"\n    },\n     \"IsNextJobAvailable?\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n          \"Variable\": \"$.iterator.continue\",\n           \"BooleanEquals\": true,\n          \"Next\": \"EMRStepSubmit\"\n        }\n      ],\n        \"Default\": \"AllJobsCompleted\"\n    },\n    \"AllJobsCompleted\": {\n     \"Type\": \"Task\",\n     \"Resource\": \"${alljobscompletedlambdaArn}\",\n      \"InputPath\": \"$\",\n     \"End\": true\n   }\n  }\n}",
                        {
                            "createemrlambdaArn": {
                                "Fn::GetAtt": [
                                    "CreateBlogEMR",
                                    "Arn"
                                ]
                            },
                            "getclusterstatuslambdaArn": {
                                "Fn::GetAtt": [
                                    "EMRClusterStatus",
                                    "Arn"
                                ]
                            },
                            "emrstepsubmmitlambdaArn": {
                                "Fn::GetAtt": [
                                    "EMRAddEMRStep",
                                    "Arn"
                                ]
                            },
                            "getemrstepstatuslambdaArn": {
                                "Fn::GetAtt": [
                                    "EMRStepStatus",
                                    "Arn"
                                ]
                            },
                            "getnextemrsteplambdaArn": {
                                "Fn::GetAtt": [
                                    "GetNextEMRJob",
                                    "Arn"
                                ]
                            },
                            "alljobscompletedlambdaArn": {
                                "Fn::GetAtt": [
                                    "AllJobsCompleted",
                                    "Arn"
                                ]
                            },
                            "etlstatemachinedaterotationlambdaArn": {
                                "Fn::GetAtt": [
                                    "ETLStateMachineDateRotation",
                                    "Arn"
                                ]
                            }
                        }
                    ]
                },
                "RoleArn": {
                    "Fn::ImportValue": {
                        "Fn::Join": [
                            "",
                            [
                                "StateMachineLambdaInvokeRole"
                            ]
                        ]
                    }
                }
            }
        },
        "ScheduledRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "ScheduledRule",
                "ScheduleExpression": "rate(1 day)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Ref": "ETLStateMachine"
                        },
                        "Id": "StateMachineV1",
                        "RoleArn": {
                            "Fn::ImportValue": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "StateMachine-Execution-Role"
                                    ]
                                ]
                            }
                        },
                        "Input": "{\"1\": \"deposit\",\"2\": \"investment\",\"3\": \"loan\",  \"4\": \"shipment\",\"wait_time\": 190,  \"step_wait_time\": 120,  \"cluster_id\": \"\",\"step_id\": \"\",\"iterator\": {\"count\": 5,  \"index\": 1,\"step\": 1}}"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "Message": {
            "Description": "The message from the custom resource.",
            "Value": {
                "Fn::GetAtt": [
                    "InsertDDBETLConfig",
                    "Message"
                ]
            }
        },
        "ETLStateMachineArn": {
            "Description": "Arn of the State Machine created",
            "Value": {
                "Ref": "ETLStateMachine"
            }
        }
    }
}
